// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var App;

  App = angular.module('ReaderProjectApp');

  App.controller('NewPostCtrl', function($scope, $location, API, $timeout, Restangular) {
    var getTag, hideAlert, lastUrl, showAlert, updateTime;
    lastUrl = '';
    showAlert = function(status, text) {
      $scope.alertType = status;
      return $scope.alert = text;
    };
    hideAlert = function() {
      $scope.alertType = false;
      return $scope.alert = false;
    };
    $scope.editable = false;
    $scope.item = {};
    $scope.item.updateTime = (new Date()).valueOf();
    $scope.showForm = true;
    (updateTime = function() {
      $scope.item.updateTime = (new Date()).valueOf();
      return $timeout(updateTime, 1000);
    })();
    $scope.urlChange = function() {
      var url;
      url = $scope.item.url;
      if (url && (lastUrl !== url)) {
        lastUrl = url;
        return Restangular.one('checkLink', md5(url)).get().then(function(result) {
          if (result.message) {
            $scope.exist = true;
            return Restangular.one('summary/url', md5(url)).get().then(function(summary) {
              var tag, tagString;
              tag = summary.tag;
              tagString = ((function() {
                var _i, _len, _ref, _results;
                _ref = summary.tag;
                _results = [];
                for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                  tag = _ref[_i];
                  _results.push(tag.tagName);
                }
                return _results;
              })()).join(', ');
              summary = summary.summary;
              summary.tag = tag;
              summary.tagString = tagString;
              $scope.item = summary;
              return $scope.editable = false;
            });
          } else {
            $scope.exist = false;
            return $scope.getPageInfoByUrl(url);
          }
        });
      }
    };
    $scope.getPageInfoByUrl = function(url) {
      return API.pageinfo.url.get({
        url: url
      }, function(value, headers) {
        $scope.item.title = value.title.slice(0, 50);
        $scope.item.abstracts = value.description.slice(0, 500);
        $scope.item.tag = value.keywords;
        $scope.item.logo = value.favicon;
        return $scope.editable = true;
      }, function(response) {
        return $scope.editable = false;
      });
    };
    getTag = function() {
      var tag, _i, _len, _ref, _results;
      if ($scope.item.tagString) {
        _ref = $scope.item.tagString.replace('，', ',').split(',');
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tag = _ref[_i];
          if (tag !== '') {
            _results.push(tag.replace(/(^\s*)|(\s*$)/g, ''));
          }
        }
        return _results;
      } else {
        return [];
      }
    };
    $scope.addSummary = function() {
      hideAlert();
      return Restangular.all('summary').post({
        summary: {
          url: $scope.item.url,
          title: $scope.item.title,
          abstracts: $scope.item.abstracts,
          media: $scope.item.media,
          logo: $scope.item.logo
        },
        tag: getTag()
      }).then(function(value) {
        $scope.showForm = false;
        showAlert('success', '发布成功');
        return $timeout(function() {
          return $location.path('/');
        }, 3000);
      }, function(response) {
        return showAlert('danger', '发生意外错误!');
      });
    };
    return $scope.editSummary = function() {
      hideAlert();
      return Restangular.one('summary', $scope.item.summaryId).customPUT({
        summary: {
          url: $scope.item.url,
          title: $scope.item.title,
          abstracts: $scope.item.abstracts,
          media: $scope.item.media,
          logo: $scope.item.logo
        },
        tag: getTag()
      }).then(function(result) {
        $scope.showForm = false;
        showAlert('success', '发布成功');
        return $timeout(function() {
          return $location.path('/');
        }, 3000);
      }, function(response) {
        return showAlert('danger', '发生意外错误!');
      });
    };
  });

}).call(this);
