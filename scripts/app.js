// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  var App;

  window.server = 'http://182.254.151.62/1/';

  window.pageinfo = 'http://pageinfo.duapp.com';

  App = angular.module('ReaderProjectApp', ['ngRoute', 'ngSanitize', 'ngResource', 'restangular', 'ngAnimate', 'infinite-scroll', 'pasvaz.bindonce']);

  App.config(function($routeProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'template/main.view',
      controller: 'MainCtrl'
    }).when('/login', {
      templateUrl: 'template/login.view',
      controller: 'LoginCtrl'
    }).when('/sign', {
      templateUrl: 'template/sign.view',
      controller: 'SignCtrl'
    }).when('/newPost', {
      templateUrl: 'template/newPost.view',
      controller: 'NewPostCtrl'
    }).when('/setting', {
      templateUrl: 'template/setting.view',
      controller: 'SettingCtrl'
    }).when('/like', {
      templateUrl: 'template/like.view',
      controller: 'LikeCtrl'
    }).otherwise({
      redirectTo: '/'
    });
  }).config(function($locationProvider) {
    return $locationProvider.html5Mode(true);
  }).config(function($httpProvider) {
    return $httpProvider.defaults.withCredentials = false;
  }).config(function(RestangularProvider) {
    RestangularProvider.setBaseUrl(window.server);
    RestangularProvider.setParentless(true);
    RestangularProvider.setDefaultHeaders({
      'Token': localStorage['token'] || ''
    });
    return RestangularProvider.setResponseInterceptor(function(data, operation, what, url, response, deferred) {
      if (_.isObject(data)) {
        _.each(data, function(value, key, list) {
          if (_.isString(value)) {
            if (value === 'true') {
              return list[key] = true;
            } else if (value === 'false') {
              return list[key] = false;
            }
          }
        });
      } else if (_.isString(data)) {
        if (data === 'true') {
          data = {
            message: true
          };
        } else if (data === 'false') {
          data = {
            message: false
          };
        }
      }
      return data;
    });
  });

  App.run([
    '$rootScope', function($rootScope) {
      $rootScope.setBackground = function(url) {
        if (url != null) {
          localStorage['backgroundImageUrl'] = url;
          return $rootScope.setBackground();
        } else {
          return $('#bg').css('background-image', "url(" + (localStorage['backgroundImageUrl'] || 'none') + ")");
        }
      };
      return window.scrollTo(0, 1);
    }
  ]);

}).call(this);
